name: Dependency Update & Security Scan

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update to perform'
        required: true
        default: 'security'
        type: choice
        options:
        - security
        - all
        - python
        - node

jobs:
  # ============================================================================
  # SECURITY SCAN
  # ============================================================================
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Comment PR with security findings
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const trivyOutput = fs.readFileSync('trivy-results.sarif', 'utf8');
          const results = JSON.parse(trivyOutput);
          
          let comment = '## üîí Security Scan Results\n\n';
          
          if (results.runs && results.runs.length > 0) {
            const vulnerabilities = results.runs[0].results || [];
            if (vulnerabilities.length > 0) {
              comment += `‚ö†Ô∏è **${vulnerabilities.length} security vulnerabilities found**\n\n`;
              comment += '| Severity | Rule | Location |\n';
              comment += '|----------|------|----------|\n';
              
              vulnerabilities.forEach(vuln => {
                const severity = vuln.level || 'UNKNOWN';
                const rule = vuln.ruleId || 'Unknown';
                const location = vuln.locations?.[0]?.physicalLocation?.artifactLocation?.uri || 'Unknown';
                comment += `| ${severity} | ${rule} | ${location} |\n`;
              });
            } else {
              comment += '‚úÖ **No security vulnerabilities found**\n';
            }
          } else {
            comment += '‚úÖ **No security vulnerabilities found**\n';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  # ============================================================================
  # PYTHON DEPENDENCY UPDATE
  # ============================================================================
  update-python-deps:
    name: Update Python Dependencies
    runs-on: ubuntu-latest
    if: github.event.inputs.update_type == 'python' || github.event.inputs.update_type == 'all' || github.event.inputs.update_type == 'security'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install pip-tools
      run: pip install pip-tools

    - name: Update Python dependencies
      run: |
        for service in backend/*/; do
          if [ -f "$service/requirements.txt" ]; then
            echo "Updating dependencies for $service"
            cd "$service"
            
            # Create requirements.in if it doesn't exist
            if [ ! -f "requirements.in" ]; then
              cp requirements.txt requirements.in
            fi
            
            # Update dependencies
            pip-compile --upgrade requirements.in
            
            # Check for security vulnerabilities
            safety check -r requirements.txt || echo "Security vulnerabilities found in $service"
            
            cd ../..
          fi
        done

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Python dependencies'
        title: 'üîß Update Python Dependencies'
        body: |
          ## Python Dependency Updates
          
          This PR updates Python dependencies across all backend services.
          
          ### Changes:
          - Updated Python packages to latest compatible versions
          - Security vulnerability fixes
          - Performance improvements
          
          ### Services Updated:
          - User Service
          - Course Service
          - Enrollment Service
          - Assessment Service
          - Progress Service
          - Analytics Service
          - Communication Service
          - Content Service
          - API Gateway
          
          ### Testing:
          - [ ] All tests pass
          - [ ] Security scan clean
          - [ ] Manual testing completed
        branch: dependency-update/python-${{ github.run_id }}
        delete-branch: true

  # ============================================================================
  # NODE.JS DEPENDENCY UPDATE
  # ============================================================================
  update-node-deps:
    name: Update Node.js Dependencies
    runs-on: ubuntu-latest
    if: github.event.inputs.update_type == 'node' || github.event.inputs.update_type == 'all' || github.event.inputs.update_type == 'security'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Update Node.js dependencies
      run: |
        cd frontend
        
        # Check for outdated packages
        npm outdated || echo "All packages are up to date"
        
        # Update dependencies
        npm update
        
        # Check for security vulnerabilities
        npm audit || echo "Security vulnerabilities found"
        
        # Fix security vulnerabilities if possible
        npm audit fix || echo "Some vulnerabilities could not be automatically fixed"

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Node.js dependencies'
        title: 'üîß Update Node.js Dependencies'
        body: |
          ## Node.js Dependency Updates
          
          This PR updates Node.js dependencies for the frontend application.
          
          ### Changes:
          - Updated npm packages to latest compatible versions
          - Security vulnerability fixes
          - Performance improvements
          
          ### Testing:
          - [ ] All tests pass
          - [ ] Security scan clean
          - [ ] Manual testing completed
          - [ ] Build successful
        branch: dependency-update/node-${{ github.run_id }}
        delete-branch: true

  # ============================================================================
  # DOCKER IMAGE UPDATE
  # ============================================================================
  update-docker-images:
    name: Update Docker Base Images
    runs-on: ubuntu-latest
    if: github.event.inputs.update_type == 'all'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for outdated Docker images
      run: |
        # Check Python base image
        docker pull python:3.11-slim
        docker pull python:3.12-slim
        
        # Check Node.js base image
        docker pull node:18-alpine
        docker pull node:20-alpine
        
        # Check Nginx base image
        docker pull nginx:alpine
        docker pull nginx:1.25-alpine
        
        echo "Docker base images checked for updates"

    - name: Create Pull Request for Docker updates
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Docker base images'
        title: 'üê≥ Update Docker Base Images'
        body: |
          ## Docker Base Image Updates
          
          This PR updates Docker base images to latest versions.
          
          ### Changes:
          - Updated Python base image
          - Updated Node.js base image
          - Updated Nginx base image
          
          ### Testing:
          - [ ] All images build successfully
          - [ ] Security scan clean
          - [ ] Manual testing completed
        branch: dependency-update/docker-${{ github.run_id }}
        delete-branch: true

  # ============================================================================
  # NOTIFICATION
  # ============================================================================
  notify-updates:
    name: Notify Updates
    runs-on: ubuntu-latest
    needs: [security-scan, update-python-deps, update-node-deps, update-docker-images]
    if: always()

    steps:
    - name: Notify team
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#devops'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        text: |
          üîÑ **Dependency Update Summary**
          
          Repository: ${{ github.repository }}
          Branch: ${{ github.ref }}
          
          Security Scan: ${{ needs.security-scan.result }}
          Python Updates: ${{ needs.update-python-deps.result }}
          Node.js Updates: ${{ needs.update-node-deps.result }}
          Docker Updates: ${{ needs.update-docker-images.result }}
          
          View details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} 